网络编程
	一、网络编程概述
		1、概述
			
		2、计算机网络
			将不同区域的计算机通过特定的设备连接到一起，形成一个互相联同的环境。从而达到资源共享的目的。
		3、网络编程的目的
			利用网络协议与其他计算机之间进行通讯。
		4、网络编程中的两个问题
			1）、如何定位一台计算机？
				通信双方的网络地址
			2）、如何进行高效率的数据传输？
				a、OSI参考模型	---- 过于理想，无法再互联网中进行实现。
				b、Tcp/Ip协议   ---- 实际上进行应用的协议
	二、网络通信的要素
		1、IP地址和端口
			IP地址：网络中唯一标识一台计算机的地址。回路地址：127.0.0.1.主机地址：localhost
			端口号：每个软件/服务都有一个唯一的端口号。通过端口号可以与软件/服务进行通信。端口号可以理解为频道
			端口号：0~65535；系统占用：0~1023；自定义：1024~65535
			套接字 = 1个IP地址 + 1个端口号
		2、网络通信协议
			参考4.2
			
		
	三、InetAddress
		1、概述
			InetAddress表示互联网的Ip地址。
		2、识别主机的方式
			a、域名
				断网情况下无法获取对象（域名需通过域名服务器得到Ip地址）
			b、Ip地址
				速度快，断网情况下依旧可以使用
	四、Tcp网络通信
		1、特点
			1）、数据传输前需要建立连接通道
			2）、Tcp需要进行“三次握手”，较为安全
			3）、Tcp需要有客户端和服务器端
			4）、Tcp可以传输大量的数据
			5）、Tcp使用后需要释放连接通道，效率较低
		2、步骤
			1）、客户端
				a、第一步：声明并创建Socket对象
				b、第二步：获取Socket对象的OutputStream对象并赋值给一个输出流对象
				c、第三步：使用输出流对象向服务器端写入数据
				d、第四步：关闭Socket对象
			2）、服务器端
				a、第一步：声明并创建ServerSocket对象
				b、第二步：启动ServerSocket对象的监听状态(一旦监听成功可以获取到一个Socket对象)
				c、第三步：获取Socket对象的输入流对象并赋值给一个输入流对象
				d、第四步：获取输入内容并进行处理
				e、第五步：关闭对象
			3）、常用类
				Socket		 :表示客户端套接字
				ServerSocket :服务器套接字，用于等待服务器的请求
	
	五、UDP网络通信
	
	六、URL编程
		
		
		
		使用多线程 + Socket通信的方式实现在线聊天功能
		
		