泛型
	1、意义
		1）、使用前：
			a)、在存储和读取数据时需要进行转换（拆箱/装箱），导致程序的性能下降
	  		b)、数据在转化过程可能出现异常，导致代码存在安全性问题
	  	2）、使用后：
	  		a)、只能存储特定类型的数据，存储和读取数据时不需要进行转换，提高了代码效率
	  		b)、不需要进行类型转换，提高了代码的安全性
	2、概述
		泛化：从具体到一般的过程。
		泛型：从具体类型要一般类型的过程。泛型就是类型的多态。
		
		
	3、泛型类
		1）、语法：
			class 类型<T,E.....> [extends 父类<....>]{}
		2）、说明
			T	：类型变量，也可以理解为类型占位符。可以有多个。在类中进行使用		
		3）、实现原理：
			Java中使用了类型擦除的方式实现的泛型类。所谓类型擦除是指在编译阶段会擦除所有出现
			了类型变量的标记，然后用初始化时所指定的具体类型类进行替换。替换后所有类型变量的位
			置都将被具体类型所替代。如果没有指定则默认为Object类型。所以，Java中的泛型也
			称为“伪泛型”。	
		4）、类型初始化方式
			a、实例化对象时进行初始化
			b、子类继承父类时进行初始化
		5）、注意事项
			a、无法用基本类型来替换变量T
 	 		b、静态方法中不能使用类型变量T	
	4、泛型方法
		1）、语法
			<T> 返回值类型 方法名（参数列表）{}
		2)、说明
			泛型方法的类型变量(占位符)可以用在返回值和参数中
		3)、特点
			a、在返回类型前定义类型变量，可以定义多个
	  		b、类型变量可以在返回值、参数列表及方法内进行使用
	  		c、泛型方法可以定义为静态方法		
	5、泛型与继承
		泛型类对象之间不存在继承关系。具有继承关系的两个类型的泛型类对象是兄弟关系
		
		原因：
		List<B>使用的是父类型，父类型支持更多的数据类型，在使用时List<B>可能会破坏
	 	List<A>的约束，所以Java中不承认继承关系。
	
	6、通配符 --- ？
		?可以表示任意的类型，可以兼容任意的相同类型的泛型对象。
		? == （-∞，+∞）
		
		注意事项：
			a)、使用了统配符的集合对象无法添加元素
	 		b)、可以对使用了通配符的集合对象进行遍历
	 		c)、可以移除使用通配符的集合中的元素
	7、限定符
		<? extends Number>	：限定的类型及其子类型都可以兼容
		<? super Number>	：限定的类型及其父类型都可以兼容
	
	